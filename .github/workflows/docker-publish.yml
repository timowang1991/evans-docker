name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: evans

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: updates apt-get and install curl
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Sets EVANS_VER env
        run: |
          export EVANS_VER=$(curl --silent "https://api.github.com/repos/ktr0731/evans/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          echo "EVANS_VER=$EVANS_VER" >> $GITHUB_ENV

      - name: Run tests
        run: docker build . --file Dockerfile --build-arg EVANS_VER=${{ env.EVANS_VER }}

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: updates apt-get and install curl
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Sets EVANS_VER env
        run: |
          export EVANS_VER=$(curl --silent "https://api.github.com/repos/ktr0731/evans/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          echo "EVANS_VER=$EVANS_VER" >> $GITHUB_ENV

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg EVANS_VER=${{ env.EVANS_VER }}

      - name: Log into registry
        env:
          DOCKER_USERNAME: ${{ secrets.docker.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.docker.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Push image
        env:
          DOCKER_USERNAME: ${{ secrets.docker.DOCKER_USERNAME }}
        run: |
          IMAGE_ID=$DOCKER_USERNAME/evans

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
